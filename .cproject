<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.ide.eight_zero.configuration.so.debug.2060001193">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.eight_zero.configuration.so.debug.2060001193" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings>
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/crScene"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/crScene/Debug"/>
						<entry flags="RESOLVED" kind="libraryFile" name="crScene" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
				<extensions>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="so" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.sharedLib" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.eight_zero.configuration.so.debug.2060001193" name="Debug" parent="com.nvidia.cuda.ide.eight_zero.configuration.so.debug">
					<folderInfo id="com.nvidia.cuda.ide.eight_zero.configuration.so.debug.2060001193." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.tools.toolchain.eight_zero.so.debug.1673364224" name="CUDA Toolkit 8.0" superClass="com.nvidia.cuda.tools.toolchain.eight_zero.so.debug">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.1130104249" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/crScene}/Debug" id="com.nvidia.cuda.ide.builder.512111938" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 8.0 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.128067121" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.191977807" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.option.level.1059910172" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level" value="true" valueType="boolean"/>
								<option defaultValue="nvcc.compiler.optimization.level.none" id="nvcc.compiler.optimization.level.673867112" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.166392211" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.include.paths.918740817" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="/usr/include/opencv"/>
									<listOptionValue builtIn="false" value="../inc"/>
								</option>
								<option id="nvcc.compiler.compileroptions.668968808" superClass="nvcc.compiler.compileroptions" valueType="stringList">
									<listOptionValue builtIn="false" value="-fopenmp"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.705266316" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.107529100" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.984531089" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.248725492" name="NVCC Linker" superClass="nvcc.linker.base">
								<option defaultValue="true" id="nvcc.linker.option.shared.778224084" name="Shared (-shared)" superClass="nvcc.linker.option.shared" valueType="boolean"/>
								<option id="nvcc.linker.option.libs.1024783920" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="gomp"/>
								</option>
								<inputType id="nvcc.linker.input.237496839" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.330345637" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1981315232" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<option id="gnu.both.asm.option.include.paths.1303692196" superClass="gnu.both.asm.option.include.paths" valueType="includePath"/>
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.860431455" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="5" minor="0"/>
					<ptx major="5" minor="0"/>
				</executable>
				<editor-arch major="5" minor="0"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.ide.eight_zero.configuration.so.release.1496570667">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.eight_zero.configuration.so.release.1496570667" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings>
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/crScene"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/crScene/Release"/>
						<entry flags="RESOLVED" kind="libraryFile" name="crScene" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
				<extensions>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="so" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.sharedLib" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.eight_zero.configuration.so.release.1496570667" name="Release" parent="com.nvidia.cuda.ide.eight_zero.configuration.so.release">
					<folderInfo id="com.nvidia.cuda.ide.eight_zero.configuration.so.release.1496570667." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.ide.toolchain.eight_zero.so.release.387178446" name="CUDA Toolkit 8.0" superClass="com.nvidia.cuda.ide.toolchain.eight_zero.so.release">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.1091880422" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/crScene}/Release" id="com.nvidia.cuda.ide.builder.1368858417" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 8.0 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.1662225724" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1691730135" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug"/>
								<option id="nvcc.compiler.option.level.1216757374" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level"/>
								<option defaultValue="nvcc.compiler.optimization.level.most" id="nvcc.compiler.optimization.level.964007482" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.965240041" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.include.paths.280086023" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="/usr/include/opencv"/>
									<listOptionValue builtIn="false" value="../inc"/>
								</option>
								<option id="nvcc.compiler.compileroptions.515719625" name="Preprocessor options (-Xcompiler)" superClass="nvcc.compiler.compileroptions" valueType="stringList">
									<listOptionValue builtIn="false" value="-fopenmp"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.694281344" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.165468379" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.1280908378" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.542039919" name="NVCC Linker" superClass="nvcc.linker.base">
								<option defaultValue="true" id="nvcc.linker.option.shared.1768640738" name="Shared (-shared)" superClass="nvcc.linker.option.shared" valueType="boolean"/>
								<option id="nvcc.linker.option.libs.1781547833" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="gomp"/>
								</option>
								<inputType id="nvcc.linker.input.643623888" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.848913186" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1843571056" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<option id="gnu.both.asm.option.include.paths.1706999854" name="Include paths (-I)" superClass="gnu.both.asm.option.include.paths"/>
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.386352840" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="5" minor="0"/>
					<ptx major="5" minor="0"/>
				</executable>
				<editor-arch major="5" minor="0"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="crScene.com.nvidia.cuda.ide.eight_zero.so.1669919705" name="Shared Library" projectType="com.nvidia.cuda.ide.eight_zero.so"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.eight_zero.configuration.so.release.1496570667;com.nvidia.cuda.ide.eight_zero.configuration.so.release.1496570667.;nvcc.compiler.base.1662225724;nvcc.compiler.input.cpp.165468379">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.eight_zero.configuration.so.release.1496570667;com.nvidia.cuda.ide.eight_zero.configuration.so.release.1496570667.;nvcc.compiler.base.1662225724;nvcc.compiler.input.c.1280908378">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.eight_zero.configuration.so.debug.2060001193;com.nvidia.cuda.ide.eight_zero.configuration.so.debug.2060001193.;nvcc.compiler.base.128067121;nvcc.compiler.input.cpp.107529100">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.eight_zero.configuration.so.release.1496570667;com.nvidia.cuda.ide.eight_zero.configuration.so.release.1496570667.;nvcc.compiler.base.1662225724;nvcc.compiler.input.cu.694281344">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.eight_zero.configuration.so.debug.2060001193;com.nvidia.cuda.ide.eight_zero.configuration.so.debug.2060001193.;nvcc.compiler.base.128067121;nvcc.compiler.input.cu.705266316">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.eight_zero.configuration.so.debug.2060001193;com.nvidia.cuda.ide.eight_zero.configuration.so.debug.2060001193.;nvcc.compiler.base.128067121;nvcc.compiler.input.c.984531089">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope"/>
</cproject>
